# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    env(REDIS_URL): redis://localhost:6379

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.# automatically injects dependencies in your services
        bind:
            iterable $applications: !tagged_iterator secret_santa.application

    _instanceof:
        JoliCode\SecretSanta\Application\ApplicationInterface:
            tags: ['secret_santa.application']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    JoliCode\SecretSanta\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    JoliCode\SecretSanta\Controller\SantaController:
        public: true

    JoliCode\SecretSanta\Controller\SlackController:
        arguments:
            $slackClientId: '%env(SLACK_CLIENT_ID)%'
            $slackClientSecret: '%env(SLACK_CLIENT_SECRET)%'

    JoliCode\SecretSanta\Controller\DiscordController:
        arguments:
            $discordClientId: '%env(DISCORD_CLIENT_ID)%'
            $discordClientSecret: '%env(DISCORD_CLIENT_SECRET)%'

    JoliCode\SecretSanta\Discord\ApiHelper:
        public: true
        arguments:
            $discordBotToken: '%env(DISCORD_BOT_TOKEN)%'

    Predis\Client:
        arguments:
            $parameters: '%env(REDIS_URL)%'

    Predis\ClientInterface:
        alias: Predis\Client

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Predis\Client'
